# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from executor.request import ExecutorRequest_pb2 as executor_dot_request_dot_ExecutorRequest__pb2
from executor.response import ExecutorResponse_pb2 as executor_dot_response_dot_ExecutorResponse__pb2


class ExecutorServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.execute = channel.unary_unary(
        '/fkhp.data.layer.executor.client.ExecutorService/execute',
        request_serializer=executor_dot_request_dot_ExecutorRequest__pb2.ExecutorRequest.SerializeToString,
        response_deserializer=executor_dot_response_dot_ExecutorResponse__pb2.ExecutorResponse.FromString,
        )


class ExecutorServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def execute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExecutorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'execute': grpc.unary_unary_rpc_method_handler(
          servicer.execute,
          request_deserializer=executor_dot_request_dot_ExecutorRequest__pb2.ExecutorRequest.FromString,
          response_serializer=executor_dot_response_dot_ExecutorResponse__pb2.ExecutorResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fkhp.data.layer.executor.client.ExecutorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
