# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from gateway.requests import ProductReviewRequest_pb2 as gateway_dot_requests_dot_ProductReviewRequest__pb2
from gateway.responses import ProductReviewResponse_pb2 as gateway_dot_responses_dot_ProductReviewResponse__pb2


class ReviewServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getProductReviews = channel.unary_unary(
        '/fkhp.gateway.layer.client.ReviewService/getProductReviews',
        request_serializer=gateway_dot_requests_dot_ProductReviewRequest__pb2.ProductReviewRequest.SerializeToString,
        response_deserializer=gateway_dot_responses_dot_ProductReviewResponse__pb2.ProductReviewResponse.FromString,
        )


class ReviewServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getProductReviews(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReviewServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getProductReviews': grpc.unary_unary_rpc_method_handler(
          servicer.getProductReviews,
          request_deserializer=gateway_dot_requests_dot_ProductReviewRequest__pb2.ProductReviewRequest.FromString,
          response_serializer=gateway_dot_responses_dot_ProductReviewResponse__pb2.ProductReviewResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fkhp.gateway.layer.client.ReviewService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
