# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from gateway.requests import ProductRequestRequest_pb2 as gateway_dot_requests_dot_ProductRequestRequest__pb2
from gateway.responses import ProductRequestResponse_pb2 as gateway_dot_responses_dot_ProductRequestResponse__pb2


class ProductRequestServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.productRequest = channel.unary_unary(
        '/fkhp.gateway.layer.client.ProductRequestService/productRequest',
        request_serializer=gateway_dot_requests_dot_ProductRequestRequest__pb2.ProductRequestRequest.SerializeToString,
        response_deserializer=gateway_dot_responses_dot_ProductRequestResponse__pb2.ProductRequestResponse.FromString,
        )


class ProductRequestServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def productRequest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProductRequestServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'productRequest': grpc.unary_unary_rpc_method_handler(
          servicer.productRequest,
          request_deserializer=gateway_dot_requests_dot_ProductRequestRequest__pb2.ProductRequestRequest.FromString,
          response_serializer=gateway_dot_responses_dot_ProductRequestResponse__pb2.ProductRequestResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fkhp.gateway.layer.client.ProductRequestService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
